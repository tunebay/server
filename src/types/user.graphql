type User {
  avatar: String
  bio: String
  coverPhoto: String
  id: Int
  name: String
  profilePicture: String
  playlists: [Playlist!]!
  username: String!
  email: String!
  createdAt: String!
}

type Query {
  getUser(id: Int, username: String): User
  allUsers: [User]!
}

type Mutation {
  signup(
    #required
    email: String!
    username: String!
    password: String!
    name: String!
    # could get from provider
    coverPhoto: String
    profilePicture: String
  ): RegisterResponse!

  login(emailOrUsername: String!, password: String!): LoginResponse!
}

type RegisterResponse {
  ok: Boolean!
  user: User
  errors: [Error!]
}

type LoginResponse {
  ok: Boolean!
  errors: [Error!]
  token: String
  refreshToken: String
}
